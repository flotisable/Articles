#+TITLE: git 簡介
#+AUTHOR: Flotisable
#+DATE: <2018-04-13 Fri>

因為之前聽到實驗室的同學跟學弟有提到，想說就來簡單介紹一下 git 是什麼東西。
然後講講一些基本的使用這樣。

-----

* git 與版本控制
  git 是由 Linux 的開發者 Linus 所做的一個版本控制系統。
  任何被修改過得檔案都可以被視為不同的版本，而版本控制顧名思義就是協助使用者管理不同版本的軟體。
  在程式開發上常常需要做這些版本的管理，因為修改程式很容易發生原本可以正常運作，改完卻死掉的狀態。
  如果有保存之前的版本，就可以比較差異，甚至是直接回復到過去的版本。
  傳統上可以用資料夾或壓縮檔分別儲存不同的版本，但是人工維護多個版本很容易就會發生搞錯或是讓整個版本資訊變得很亂。
  因此為懶而懶的程式設計師就開發了用來取代人工的版本控制系統。
  當然，版本控制系統並不受限於程式原始碼，只要是檔案都可以透過版本控制系統管理不同版本，像這份文件就透過 git 做管理。

  版本控制系統又簡單分成集中式與分散式，其中 git 是屬於分散式的版本控制系統。
  這兩種版本控制系統主要的差異在於版本儲存的方式。
  集中式的系統只將版本儲存於伺服端，而要使用到的人都只能透過這唯一的伺服端做操作。
  分散式的系統則是所有使用這些版本的使用者都會有一份完整的版本資料。
  這使得其中一端的資料毀損時可以透過任何擁有版本資料的人復原，而且不必因為受限於網路無法存取伺服端而讓開發停滯。

  目前我個人使用 git 一年半左右的經驗是覺得使用 git 有以下好處
  1. 備份資料

     這樣開發程式如果要大改時就可以毫無忌憚的亂改，反正掛掉時可以隨時回復。

  2. 多人開發

     因為 git 可以將不同的版本很容易的做合併，在多人開發時就不必擔心檔案不同步的問題。

  3. 檔案傳輸

     這是我個人偏好，因為我常在不同電腦與系統間轉換，而使用 git 就可以很簡單的透過第三方伺服端傳輸檔案。

  上面幾個好處並不只限於 git，而且是從我的角度出發，實際還是以每個人各自己體驗做考量。
  接下來會開始介紹 git 的基本使用，請注意因為我是終端愛好者而且姑且算是程式設計師，所以只會介紹終端機的指令。
  當然 git 也有提供 GUI 供喜歡圖形介面的人使用，詳情請洽[[https://git-scm.com][官網]]與 google，這方面我不太熟。

* 初心者
